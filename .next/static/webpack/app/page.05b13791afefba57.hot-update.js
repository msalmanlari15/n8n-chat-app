"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useThinkingStatus.ts":
/*!************************************!*\
  !*** ./hooks/useThinkingStatus.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStreamingText: () => (/* binding */ useStreamingText),\n/* harmony export */   useThinkingStatus: () => (/* binding */ useThinkingStatus)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useThinkingStatus,useStreamingText auto */ \nfunction useThinkingStatus(sessionId, messageId) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const { pollingInterval = 500, enabled = true } = options;\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isPolling, setIsPolling] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const fetchStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThinkingStatus.useCallback[fetchStatus]\": async ()=>{\n            if (!sessionId || !messageId || !enabled) return;\n            try {\n                const response = await fetch(\"/api/status?sessionId=\".concat(sessionId, \"&messageId=\").concat(messageId));\n                if (response.ok) {\n                    const data = await response.json();\n                    console.log('Thinking status received:', data);\n                    if (data.status) {\n                        console.log('Setting thinking status:', data.status);\n                        setStatus(data.status);\n                    } else {\n                        setStatus(null);\n                    }\n                }\n            } catch (error) {\n                console.error('Failed to fetch thinking status:', error);\n            }\n        }\n    }[\"useThinkingStatus.useCallback[fetchStatus]\"], [\n        sessionId,\n        messageId,\n        enabled\n    ]);\n    const clearStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useThinkingStatus.useCallback[clearStatus]\": async ()=>{\n            if (!sessionId || !messageId) return;\n            try {\n                await fetch(\"/api/status?sessionId=\".concat(sessionId, \"&messageId=\").concat(messageId), {\n                    method: 'DELETE'\n                });\n                setStatus(null);\n            } catch (error) {\n                console.error('Failed to clear status:', error);\n            }\n        }\n    }[\"useThinkingStatus.useCallback[clearStatus]\"], [\n        sessionId,\n        messageId\n    ]);\n    // Start/stop polling\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useThinkingStatus.useEffect\": ()=>{\n            if (enabled && sessionId && messageId) {\n                setIsPolling(true);\n                // Initial fetch\n                fetchStatus();\n                // Set up polling\n                intervalRef.current = setInterval(fetchStatus, pollingInterval);\n                return ({\n                    \"useThinkingStatus.useEffect\": ()=>{\n                        if (intervalRef.current) {\n                            clearInterval(intervalRef.current);\n                            intervalRef.current = null;\n                        }\n                        setIsPolling(false);\n                    }\n                })[\"useThinkingStatus.useEffect\"];\n            }\n        }\n    }[\"useThinkingStatus.useEffect\"], [\n        enabled,\n        sessionId,\n        messageId,\n        pollingInterval,\n        fetchStatus\n    ]);\n    return {\n        status,\n        isPolling,\n        clearStatus,\n        refetch: fetchStatus\n    };\n}\n// Hook for simulating streaming text\nfunction useStreamingText(text) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { speed = 20, enabled = true } = options;\n    const [displayedText, setDisplayedText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');\n    const [isStreaming, setIsStreaming] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const indexRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useStreamingText.useEffect\": ()=>{\n            if (!enabled || !text) {\n                setDisplayedText(text);\n                return;\n            }\n            // Reset state\n            setDisplayedText('');\n            indexRef.current = 0;\n            setIsStreaming(true);\n            intervalRef.current = setInterval({\n                \"useStreamingText.useEffect\": ()=>{\n                    if (indexRef.current < text.length) {\n                        setDisplayedText(text.slice(0, indexRef.current + 1));\n                        indexRef.current++;\n                    } else {\n                        if (intervalRef.current) {\n                            clearInterval(intervalRef.current);\n                            intervalRef.current = null;\n                        }\n                        setIsStreaming(false);\n                    }\n                }\n            }[\"useStreamingText.useEffect\"], speed);\n            return ({\n                \"useStreamingText.useEffect\": ()=>{\n                    if (intervalRef.current) {\n                        clearInterval(intervalRef.current);\n                        intervalRef.current = null;\n                    }\n                }\n            })[\"useStreamingText.useEffect\"];\n        }\n    }[\"useStreamingText.useEffect\"], [\n        text,\n        speed,\n        enabled\n    ]);\n    return {\n        displayedText,\n        isStreaming\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useThinkingStatus.ts\n"));

/***/ })

});